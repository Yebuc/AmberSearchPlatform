{
  "code": 0,
  "data": {
    "records": [
      {
        "id": "1664516564302450689",
        "title": "写了 7 年代码，第一次见这么狗血的小 Bug！",
        "description": null,
        "content": "刚刚修我们鱼聪明 AI 助手平台的一个 Bug，结局很狗血！赶紧给大家分享一下，顺便也分享下标准的排查 Bug 思路。\n\n事情是这样的，有小伙伴在鱼聪明平台（https://www.yucongming.com）创建了一个 AI 助手，名称为【软件开发人员】。当我搜索 “软件开发” 时，能搜出这个模型：\n\n![鱼聪明 AI 助手](https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/1/FvjoqC-h9_PnA9tQL9NLwUPiSMC7.png)\n\n结果搜索 “软件开发人员”，也就是助手的全名称时，竟然搜不出结果了？！\n\n![鱼聪明 AI 助手](https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/1/FiF4RPVM0STya7Onl1EPbDRBVPwk.png)\n\n遇到这种事，先从前端出发：第一时间确认前端发送的请求参数是否正确。\n\n按 F12 打开网络控制台，发现搜索关键词传的没毛病：\n\n![](https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/1/FtZKXy5HeejTqemAW5nxLT3dkL8R.png)\n\n\n\n然后鱼皮顺着网线爬到后端，先要确认一下从数据库中有没有查出最原始的数据，再考虑是不是被业务代码过滤掉了。\n\n在本地开启数据库的查询日志，用的是 MyBatis Plus 框架，开启日志的代码如下：\n\n```\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: false\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n```\n\n\n\n再次执行搜索，打印出的 SQL 记录如图：\n\n![](https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/1/FkhoKtVToie3AylrnRy4AC97Xmht.png)\n\n把参数拼到 SQL 语句模板中，就是 name like '%软件开发人员%'，看上去没有任何问题。\n\n再次验证，接下来我们把拼接好的 SQL 放到数据库控制台进行真实查询：\n\n![](https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/1/FrQZNKoHJkCD-p_EBoesQUy2-QJC.png)\n\n\n\n结果查询结果为 0：\n\n![](https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/1/FshVIhyqtlviqDu-uPPh92CFBYOs.png)\n\n奇怪了，难道数据库中没有这条记录？但是为啥搜索 “软件开发” 的时候，能搜出这个助手呢？\n\n然后我又用助手的 id 去数据库中查询，发现确实有名称为 “软件开发人员” 的数据。\n\n![](https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/1/FqeIXrkVi1BQcfpBqrIE_tRI8k71.png)\n\n气了气了，为啥查不出来啊？！大家也可以猜一猜。\n\n这个时候我其实已经有想法了，难道是数据库中存储的 name 和我们看到的 name 格式（或者字符）不一致？于是我就从数据库中把 name 的值复制出来，如图：\n\n![](https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/1/FrTvipHjWLMu4RHrh05QAKF3IFb4.png)\n\n\n\n结果，从数据库中复制出来的 name 作为查询条件，是能查出结果的！\n\n于是就有了下面这张神奇的截图，两个 “一模一样” 的 SQL 语句，一个有结果，一个没结果：\n\n![](https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/1/Fhk7thG-pitIzkVSVBPg6dwaaRd9.png)\n\n\n\n基本就可以确认了，此 “软件开发人员” 非彼 “软件开发人员”，这两个字符串是不一致的！\n\n于是我分别用这两个字符串来生成 MD5 Hash 码，发现 Hash 码不同，说明原字符串不同。\n\n![](https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/1/FkCH9IvrchjYA6grVIK-fIVUVh-D.png)\n\n\n\n再进行更精确地对比，发现是 “人” 字不同：\n\n![](https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/1/FoZ8MXqRdawECjCD35l3hvzEIY6N.png)\n\n\n\n坑啊！谁能看出来这两个 “人” 字有区别！\n\n到底有啥区别呢？问下鱼聪明 AI 吧~\n\n![](https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/1/FtNsm-sc36814v1GsbV9cwa9WDTx.png)\n\n\n\n结果一秒破案：原来第一个 “人” 是全角字符，这真的是。。。泰裤辣！\n\n大概整个案件就是这样。所以说，我们看到得未必是真实的，这个 Bug 让我想起了很多朋友初上大学时经常把中英文逗号、中英文冒号搞混，这种 Bug 真是让人哭笑不得。希望各位程序员朋友们，尽量不要遇到吧，遇到了的话，想想我这篇文章，说不定就有了解决的思路呢。\n\n[鱼聪明AI - 做您强大的AI助手](https://www.yucongming.com)",
        "category": "文章",
        "cover": "https://pic.code-nav.cn/post_cover/1601072287388278786/fCE2ufkb-mmexport1685609254865_edit_189398758157037(1).jpg",
        "language": null,
        "viewNum": 113,
        "thumbNum": 5,
        "favourNum": 0,
        "commentNum": 3,
        "priority": 999,
        "userId": "1601072287388278786",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2023-06-02T06:17:28.000+00:00",
        "updateTime": "2023-06-08T03:29:59.000+00:00",
        "user": {
          "id": "1601072287388278786",
          "planetCode": "1",
          "userName": "程序员鱼皮",
          "userAvatar": "https://pic.code-nav.cn/user_avatar/1601072287388278786/9vqTr3HM-WechatIMG1287.jpeg",
          "gender": 1,
          "userProfile": "这个网站的老大",
          "userRole": "admin",
          "interests": [
            "C++",
            "Java",
            "Python",
            "算法"
          ],
          "place": "上海",
          "birthday": "1998-11-03",
          "school": "东华大学",
          "major": "网络工程",
          "education": null,
          "graduationYear": 2020,
          "jobStatus": null,
          "company": null,
          "job": null,
          "workYear": 2,
          "direction": "后端",
          "goal": null,
          "github": "https://github.com/liyupi",
          "blog": "https://yupi.icu",
          "score": 1600,
          "coin": 170,
          "followeeNum": 762,
          "followNum": 6,
          "followStatus": null,
          "vipExpireTime": "2024-05-24T03:35:38.000+00:00",
          "lastLoginTime": null,
          "createTime": "2022-12-09T04:32:33.000+00:00",
          "updateTime": "2023-06-08T02:53:25.000+00:00"
        },
        "tags": [
          "文章",
          "人工智能"
        ],
        "fileList": null,
        "videoList": null,
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      },
      {
        "id": "1662386056412102657",
        "title": "GitHub copilot chat 体验",
        "description": "一个能让你开发效率翻倍的工具，真的不看一下吗？",
        "content": "## GitHub copilot chat 体验\n\n​\t最近，看到很多大佬分享 GitHub copilot chat ，据说能够让效率翻倍，抱着不相信，打假的心态我也弄一个，体验一下，结果真的很赞，下面分享使用 GitHub copilot chat 的过程\n\n​\t首先，我们需要先了解一下 GitHub copilot chat 是一个什么东西，GitHub Copilot 是一个AI驱动的代码完成工具，由 OpenAI 和 GitHub 联合开发。它利用机器学习模型预测和生成代码，帮助开发者快速编写代码。而GitHub Copilot Chat 则是 GitHub Copilot 的扩展，它将 AI 编程助手融入到对话中，帮助解答编程问题，提供代码示例，甚至可以对代码进行审查和修正。这两种工具都是开发者的有效助手，帮助提升编程效率和代码质量。下面，我们需要做这几件事情\uD83D\uDC47\uD83C\uDFFB\uD83D\uDC47\uD83C\uDFFB\n\n1. 你必须购买了 GitHub copilot ，因为 chat 是基于它的，这个大家可以和我一样去某宝搜索，很便宜（一杯奶茶），我相信这绝对是你2023最具性价比的投资\n2. 当你购买成功后，就可以去 VSCode 左下角登录一下你购买服务的账号，然后在插件下载中心下载 GitHub copilot ，体验一下 GitHub copilot 的能力（我的代码产出 = chatGPT + GitHub Copilot），\n\n![image-20230527153837751](https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/snailrun/image-20230527153837751.png)\n\n3. 申请加入 waitlist ：https://github.com/github-copilot/chat_waitlist_signup/join 当你加入 list 后，你再次进入这个网址你可以看到 \uD83D\uDC47\uD83C\uDFFB  还有，关注你留的邮箱，通过后会通过邮箱提醒你（很快，最多两个工作日）\n\n![image-20230527154016617](https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/snailrun/image-20230527154016617.png)\n\n4. 下载我们的 VSCode insiders，因为只有在这里才能体验（坑了我好多时间）：https://code.visualstudio.com/insiders/\n\n![image-20230527154108314](https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/snailrun/image-20230527154108314.png)\n\n5. 在我们刚刚下载的VSCode insiders中 下载一个插件GitHub Copilot Nightly：https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-nightly 你会看到 \uD83D\uDC47\uD83C\uDFFB\n\n<img src=\"https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/snailrun/image-20230527154215438.png\" alt=\"image-20230527154215438\" style=\"zoom:50%;\" />\n\n​\t如果没有看到，不要慌，先看下自己编辑器是否登录上了 GitHub ，看下右下角的弹窗是不是有一个 GitHub copilot chat 的提示让你登录 GitHub，如果这两个都完成了，重启一下，应该就能看到我们心心念念的 chat页面了\n\n### 体验 AI 的强大\n\n先看下，官方对它的定位，是这样描述的：我是你的副驾驶，我是来帮你更快完成任务的。我可以识别问题，解释甚至改进代码。您可以问一些一般性的问题，但我真正擅长的是帮助您编写代码。例如:\n\n- 为我的代码生成单元测试\n- 解释选定的代码\n- 建议，修复我代码中的错误\n\n\n​\t如果你想了解更多关于我的能力和局限性，请查看副驾驶文档：https://docs.github.com/en/early-access/copilot/github-copilot-chat-transparency-note。最后它还鸡贼的进行了甩锅，我是由人工智能驱动的，所以意外和错误是可能的。不过也给我们程序员一点面子，要是不出错，那程序员不是要消失了是吧，我们一个一个功能来体验\n\n#### 为我的代码生成单元测试\n\n我先选中左侧我的函数，然后使用 `command + i` （windows 是`ctrl + i`）\n\n![image-20230527163056394](https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/snailrun/image-20230527163056394.png)\n\n这里我的 prompt 是` /test Generate tests for  the selectd code with Mocha` 这里有两个注意事项，\n\n1. 我使用了 GitHub copilot chat 提供的 `/test` 关键字，用于生成单元测试代码\n2. 我在末尾添加了 生成的测试代码使用的框架 `Mocha`\n\n我们可以看到右侧就为我们生成了对应的单元测试代码，这里我们没有安装对应的单元测试库，所以就报错了，兄弟们，帮我看看它写的对不对？（我觉得应该是靠谱的）\n\n#### 解释选定的代码\n\n> 逐步解释选中代码的原理\n\n我依然使用 `command + i` 然后 prompt 就是它提供的 `/explain`\n\n![image-20230527163742419](https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/snailrun/image-20230527163742419.png)\n\n#### 建议，修复我代码中的错误\n\n错误代码：![image-20230527164206558](https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/snailrun/image-20230527164206558.png)\n\n这里，如果执行的话，会发现它并没有检测出来 hooks 写法的错误，这也很好理解，因为它不知道这段代码的上下文，我这样写 prompt 后，就好了\n\n![image-20230527164355663](https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/snailrun/image-20230527164355663.png)\n\n### 其他功能\n\n1. `/ ext` ：询问`VS Code`扩展开发。\n2. `/fix：`修复针对所选代码中的问题提出修复建议。\n3. `/help ：`帮助关于 GitHub Copilot 的一般帮助\n4. `/vscode：`关于  VSCode 的问题\n5. `/clear：`清空当前会话\n\n### 使用体验总结\n\n1. 在左侧聊天的时候，它真的太懂程序员的懒了，它会自动预测下一个问题？这真的很智能\n2. 它最大的好处就是和编辑器完美融合，使用体验非常 nice，以后再也不用切换了\n3. 当我们在读一些源码的时候，我觉得 `/explain`真的太强大了吧，以后再也不怕看源码了\n4. 把它放在编辑器中，不代表它不能做其他事情，你完全可以把它当做一个chatGPT 3.5来用，嗯？？那以后上班玩 chatGPT 再也不怕被发现了，\n5. 当我们写完代码后，如果有很复杂的业务逻辑，很可能有一些没有测试出的 bug，我们可以直接选中代码去询问：“这段代码有什么改进的地方吗？”，“这段代码需要重构吗？”\n6. 我现在，当我们把我们的工作流程化了，我们完全可以使用 AI 来帮我们完成任务，例如：我们最常写的crud，如果代码够通用，我们写新的 crud 是不是就完全可以交给 AI，不像我们自己写，还有可能 复制粘贴错误\n7. 我们还可以问它我们在实现一些之前没有实现过的场景，怎么做，让我们写出更加健壮，可读性强的代码，因为我觉得它在学习了 GitHub 上那么多优秀的开源库后，它提供的基本上都是最佳实践，我们只需要写出更好的 prompt 即可\n\n​\t最后，我还发现了一个宝藏，那就是 `GitHub Copilot Voice ` ：,我已经加入waitlist，以后写代码，可能都不需要键盘了，这真的泰裤辣！",
        "category": "文章",
        "cover": "https://pic.code-nav.cn/post_cover/1619930914211520514/49grGX8Z-Snipaste_2023-05-27_17-10-29.png",
        "language": null,
        "viewNum": 91,
        "thumbNum": 6,
        "favourNum": 4,
        "commentNum": 2,
        "priority": 0,
        "userId": "1619930914211520514",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2023-05-27T09:11:36.000+00:00",
        "updateTime": "2023-06-08T02:59:46.000+00:00",
        "user": {
          "id": "1619930914211520514",
          "planetCode": "1012",
          "userName": "SnailRun",
          "userAvatar": "https://thirdwx.qlogo.cn/mmopen/vi_32/aRneVaen8XSWOILibfkW5SHicYZia2oDxA8zKUtnzLRVFbwiclEK8f80QMRk3kviawzL8gTWk4MgA0P0VeF1r0O0upg/132",
          "gender": null,
          "userProfile": null,
          "userRole": "vip",
          "interests": [],
          "place": null,
          "birthday": null,
          "school": null,
          "major": null,
          "education": null,
          "graduationYear": null,
          "jobStatus": null,
          "company": null,
          "job": null,
          "workYear": null,
          "direction": null,
          "goal": null,
          "github": "https://github.com/chaseFunny",
          "blog": "https://chasefunny.github.io/",
          "score": 0,
          "coin": 0,
          "followeeNum": 9,
          "followNum": 3,
          "followStatus": null,
          "vipExpireTime": "2024-02-13T14:37:59.000+00:00",
          "lastLoginTime": null,
          "createTime": "2023-01-30T05:30:01.000+00:00",
          "updateTime": "2023-05-30T08:56:16.000+00:00"
        },
        "tags": [
          "文章",
          "工具",
          "前端",
          "效率",
          "GitHub"
        ],
        "fileList": null,
        "videoList": null,
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      },
      {
        "id": "1662306279357513729",
        "title": "自我介绍",
        "description": "自我介绍",
        "content": "本人现在大二，专业软件技术，步入该领域也是在当时没有了解任何专业情况下选的自己感兴趣的专业。\n我是单招进入的大专，在中专的时候就是学的软件技术，毕业时只学到了一些编程的皮毛，在中专实习的时候关注的鱼皮大佬，当时就想以后可以做一个全栈的开发。\n       大一一年基本上都是在上我中专我学过的知识点，除了专业课的时间和上其他基础课的时间，还进了军训团。现在想想浪费了挺多时间，只在大一下学期拿了个蓝桥杯的二等奖。\n       大二一年基本上就是在准备省技能比赛，但是我参加的时VR赛项，至于为什么是参加的VR赛项就不在这里说了，这个比赛是小组赛，一个人负责建模，一个人负责动画，我负责游戏引擎开发，我当时是用的unity进行开发的，值得欣慰的是拿了个省一第一名，可以免试专升本了，现在这个学期还有两个月左右就要去实习，等到大三毕业，我要接着去读本科，我了解到在本科应该是读两年，其中的一年应该也是实习，但是我现在还有MySQL高级的一部分没有学完，JavaScript+jQuery框架刚刚学完，JavaWeb、Spring Cloud微服务应用用开发、Spring MVC企业级程序设计、javaEE数据持久化框架、Vue.js高效前端开发+Ant Design of Vue还没有开始学。\n       目前我还是有点犹豫到底是做我专业的工作，还是Unity游戏开发，如果做Unity游戏开发的话，在下半年我就可以考虑去接着打相关的比赛，但是专升本只能在本省，和大专所学的专业相关的专业去升本，关于unity开发，湖南省应该是没有相对于的专业的。\n       说了这么多，我感觉自己还是想接着去学我自己的专业，Unity游戏开发这个的话，看以后有没有兴趣自己去学吧。但是我现在只有两个月的时间去补我的专业知识了，而且还得去花时间去做毕设，准备实习前的培训，背面试题库，准备简历，累积项目经验，目前为止没有任何项目的经验。\n       现在感觉自己时间非常的紧，感觉自己的时间严重的不够用了。希望自己能撑过这一年吧。\n",
        "category": "文章",
        "cover": null,
        "language": null,
        "viewNum": 48,
        "thumbNum": 2,
        "favourNum": 0,
        "commentNum": 0,
        "priority": 0,
        "userId": "1624136754917347330",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2023-05-27T03:54:35.000+00:00",
        "updateTime": "2023-06-07T09:15:20.000+00:00",
        "user": {
          "id": "1624136754917347330",
          "planetCode": "22787",
          "userName": "爱吃猫的鱼ゝ",
          "userAvatar": "https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKNl6Ia95MtRyxAwpXZicevXxfoUMKlTgFFMydvxcR6Woiadj7g5PvX5KhX15Yzt5AVYxTya512RyTg/132",
          "gender": null,
          "userProfile": null,
          "userRole": "vip",
          "interests": null,
          "place": null,
          "birthday": null,
          "school": null,
          "major": null,
          "education": null,
          "graduationYear": null,
          "jobStatus": null,
          "company": null,
          "job": null,
          "workYear": null,
          "direction": null,
          "goal": null,
          "github": null,
          "blog": null,
          "score": 10,
          "coin": 100,
          "followeeNum": 0,
          "followNum": 0,
          "followStatus": null,
          "vipExpireTime": "2024-05-23T22:27:51.000+00:00",
          "lastLoginTime": null,
          "createTime": "2023-02-10T20:02:32.000+00:00",
          "updateTime": "2023-05-27T04:00:00.000+00:00"
        },
        "tags": [
          "文章",
          "Java",
          "自我介绍",
          "随笔"
        ],
        "fileList": null,
        "videoList": null,
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      },
      {
        "id": "1661559036400730113",
        "title": "自我介绍",
        "description": "自我介绍",
        "content": "大家好,我是一名Java软件工程师。coding是我的专业,篮球是我的兴趣。\n在工作中,我热衷于编写高质量的代码,构建稳定、高效的软件系统。我擅长Java语言和相关技术栈,如SpringBoot、MySQL、Redis等,并且具备分布式系统设计和开发经验。我热爱敏捷开发,追求简洁实用的代码和架构。\n在生活中,我的最大爱好就是打篮球。我每周固定与朋友们在室内外篮球场约上几场,运动是我解压的最佳方式。篮球也教会我很多,如团队合作、目标实现等。每当工作遇到瓶颈时,我会去打会篮球,运动过后总能心情愉悦、问题迎刃而解。",
        "category": "文章",
        "cover": null,
        "language": null,
        "viewNum": 62,
        "thumbNum": 3,
        "favourNum": 0,
        "commentNum": 0,
        "priority": 0,
        "userId": "1619511139517956097",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2023-05-25T02:25:19.000+00:00",
        "updateTime": "2023-06-07T09:17:23.000+00:00",
        "user": {
          "id": "1619511139517956097",
          "planetCode": "19830",
          "userName": "小宅",
          "userAvatar": "https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJUtWOvloBNzQdBe2rAUzJybriauxWRnUQd50yT6vOhibKqKQwW5XOV80FOt7ibGmiaeYT0D10xNIPmQ/132",
          "gender": null,
          "userProfile": null,
          "userRole": "vip",
          "interests": [
            "视频",
            "资源",
            "面试题",
            "前端",
            "工具",
            "Java",
            "网页",
            "GitHub",
            "书籍",
            "产品",
            "运营",
            "教程",
            "项目",
            "B站",
            "Go",
            "后端",
            "Javascript",
            "文档",
            "Python",
            "简历",
            "文章",
            "面试题挑战",
            "综合门户",
            "算法",
            "框架",
            "Vue",
            "测试",
            "面试",
            "C++",
            "校招",
            "人工智能",
            "产品设计",
            "CSS",
            "开源",
            "社招",
            "信息安全",
            "数据库",
            "设计",
            "软件",
            "Linux",
            "交流社区",
            "React",
            "阿里",
            "牛客",
            "随笔",
            "插件",
            "腾讯",
            "运维",
            "面经",
            "数据",
            "操作系统",
            "百度",
            "C#",
            "组件库",
            "网络",
            "代码编辑",
            "C语言",
            "求职",
            "Redis",
            "NodeJS",
            "小程序",
            "博客",
            "开发",
            "开发平台",
            "组件",
            "入门",
            "类库",
            "API接口",
            "效率",
            "大四",
            "系统",
            "UI",
            "Apache",
            "笔记",
            "PHP",
            "SQL",
            "分布式",
            "数据结构",
            "实战",
            "京东",
            "Git",
            "MySQL",
            "本科",
            "模板",
            "游戏",
            "图片",
            "创作专栏",
            "Gitee",
            "学习路线",
            "物联网",
            "练习",
            "设计模式",
            "IOS",
            "云服务",
            "图像视觉",
            "菜鸟教程",
            "图标",
            "学习建议",
            "动画",
            "内推",
            "谷歌",
            "管理系统",
            "CSDN",
            "研二",
            "大前端",
            "云计算",
            "可视化",
            "作图",
            "格式转换",
            "英语",
            "微服务",
            "竞赛",
            "Spring",
            "1年工作经验",
            "搜索引擎",
            "OJ",
            "自我修养",
            "Rust",
            "字节跳动",
            "爬虫",
            "数据分析",
            "招聘",
            "微软",
            "学术研究",
            ".NET",
            "创作者",
            "正则表达式",
            "办公",
            "音乐",
            "JQuery",
            "云原生",
            "架构",
            "阿里巴巴",
            "服务器",
            "论文",
            "计算机基础",
            "PPT",
            "低代码",
            "容器",
            "性能",
            "APP",
            "区块链",
            "建站",
            "开源中国",
            "大二",
            "色彩搭配",
            "面试题解",
            "翻译",
            "职场进阶",
            "加密转码",
            "代码托管",
            "问答",
            "镜像",
            "华为",
            "开发规范",
            "福利",
            "打包构建",
            "数据科学",
            "专科",
            "2年工作经验",
            "写作",
            "Bootstrap",
            "多线程",
            "JVM",
            "云开发",
            "文件",
            "LeetCode",
            "JSON",
            "知乎",
            "Swift",
            "比赛",
            "计算机网络",
            "日志",
            "赚钱",
            "竞赛证书",
            "经验分享",
            "MongoDB",
            "活动",
            "Shell",
            "包管理",
            "一本",
            "考试",
            "知识库",
            "博客系统",
            "软件开发",
            "社区系统",
            "路线",
            "大学生",
            "创业",
            "Elasticsearch",
            "3年工作经验",
            "系统设计",
            "富文本",
            "网易云",
            "求资源",
            "Es6",
            "NLP",
            "滴滴",
            "商城系统",
            "Arduino",
            "协作",
            "播放器",
            "博客园",
            "字体",
            "CTF",
            "Http",
            "Java 基础",
            "图像处理",
            "数字货币",
            "交互",
            "高并发",
            "Oracle",
            "Angular",
            "DevOps",
            "美团",
            "网络协议",
            "Ruby",
            "Logo",
            "转码",
            "4年工作经验",
            "缓存",
            "技术专家",
            "图形学",
            "网站分析",
            "图解",
            "ESP32",
            "比特币",
            "作品",
            "网易",
            "图床",
            "有赞",
            "监控统计",
            "响应式",
            "新浪",
            "ESP8266",
            "插画",
            "奇虎360",
            "硕士",
            "C",
            "Bug",
            "树莓派",
            "单曲",
            "Svelte",
            "代码",
            "数据挖掘",
            "W3Cschool",
            "Canvas",
            "网页分析",
            "证书",
            "掘金",
            "图库",
            "歌单",
            "五年",
            "海外硕",
            "CentOS",
            "算法工程师",
            "性能优化",
            "网络安全",
            "计算机视觉",
            "顺丰",
            "一年",
            "技术",
            "数学",
            "安全",
            "面试题挑战记录",
            "ChatGPT",
            "211本",
            "研一",
            "蓝桥杯",
            "字符串",
            "树",
            "拼多多",
            "DIY",
            "时间处理",
            "慕课网",
            "小米",
            "秋招",
            "vivo",
            "互联网",
            "像素画肖像",
            "58同城",
            "压缩",
            "51CTO",
            "电子书",
            "携程",
            "PWN",
            "底层原理",
            "小红书",
            "Objective-C",
            "猿辅导",
            "PixelMe",
            "接口文档",
            "Shopee",
            "网站",
            "思否",
            "摄影",
            "快手",
            "小工具",
            "Live2D",
            "外包",
            "索引",
            "三年",
            "伙伴匹配系统",
            "用户中心",
            "集合",
            "Springcloud",
            "考研",
            "搜索",
            "线程",
            "进程",
            "递归",
            "Hive",
            "985本",
            "软考",
            "五年以上",
            "动态规划",
            "电商项目"
          ],
          "place": null,
          "birthday": null,
          "school": null,
          "major": null,
          "education": null,
          "graduationYear": null,
          "jobStatus": null,
          "company": null,
          "job": null,
          "workYear": null,
          "direction": null,
          "goal": null,
          "github": null,
          "blog": null,
          "score": 10,
          "coin": 100,
          "followeeNum": 0,
          "followNum": 0,
          "followStatus": null,
          "vipExpireTime": "2024-04-07T01:42:11.000+00:00",
          "lastLoginTime": null,
          "createTime": "2023-01-29T01:41:59.000+00:00",
          "updateTime": "2023-05-25T08:01:59.000+00:00"
        },
        "tags": [
          "文章",
          "随笔",
          "自我介绍",
          "Java"
        ],
        "fileList": null,
        "videoList": null,
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      },
      {
        "id": "1661400494326775809",
        "title": "简单的介绍下前端菜鸡旺仔！",
        "description": "自我介绍",
        "content": "# 我的背景\n2016 年毕业于北京 211 某大学，金融本科，2018 年毕业于美国 US Top50，金融分析硕士，回国后一直在全职炒股，想做量化交易，自学 python 还有数据分析相关的包 pandas、matplotlib、seaborn、自动化excel、sklearn 、爬虫等等，学完发现编程不实践学再多就是白瞎，所以试着去找了工作，靠着这些背景，很幸运，我自己找到一家信贷公司工作，工作至今。\n\n# 人生转折-前端\n这几年股票行情不好，亏的差不多了，在工作中又发现要想研究量化交易更多的不是看你代码能力，而是数学（统计）功底，果断放弃了量化交易这条路，幸好在工作中，做模型的时候需要做可视化，接触到了前端，发现前端其实很适合我这种性格，所见即所得，正反馈很强，正好也想做个关于宠物的小程序创业，便开始了我的前端学习之路。\n\n# 前端学习情况\n我其实一直不想当培训班的韭菜，当时自学 python 都没什么问题，也就想自学前端，主要靠 B 站的视频和自己买书看，目前学完了三剑客，vue2全家桶、vue3全家桶、uniapp、微信小程序、webpack、vite、sass、ts、各种组件库element-ui、vuetify等，目前在跟着 B 站敲项目，也会去学下网络基础原理，tcp,https协议等。\n\n# 为什么要加入鱼皮这个大家庭？\n1. 因为自己在自学的过程中，都是看一些培训班的课程，他们录制的视频知识点几乎不能是全面的，而且时效性也不高，有些技术都很老了，所以看了他们的视频是远远不够的，不利于我技术的进步。\n2. 看B站的视频真的很浪费时间，因为担心跳着视频看会略过一些知识点，所以只能一点点看，很累。\n3. 我的实战经验太弱了。加入这个大家庭，希望可以和各位大佬们多学习，也想着能跟着鱼皮大哥多学习学习实战，毕竟非科班转行不易。\n4. 自己认为目前自己前端技术栈不够全面和完整，肯定有自己没有涉及的地方，比如设计模式架构等等，希望可以和真正的程序员们学习。\n\n# 我的目标\n希望能自己完成从0-1的小程序上线（前后端），完成自己的宠物创业项目，同时能学一些计算机视觉相关的内容，毕竟我这机器学习不能白学，哈哈。\n\n最后，很高兴能认识大家，希望能和大家一起共同进步！完成自己的梦想！加油兄弟们！\n抖音：**旺仔五万块创业**\n------用于记录我自己学习的过程\n",
        "category": "文章",
        "cover": null,
        "language": null,
        "viewNum": 54,
        "thumbNum": 3,
        "favourNum": 0,
        "commentNum": 0,
        "priority": 0,
        "userId": "1661380800542769153",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2023-05-24T15:55:19.000+00:00",
        "updateTime": "2023-06-07T08:35:27.000+00:00",
        "user": {
          "id": "1661380800542769153",
          "planetCode": null,
          "userName": "不靠谱的Richard",
          "userAvatar": "https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKzwicSzklYjWDXCxObPNEUe8rdzzygtzI0pa5mcQhm1dre5rIT3NJSmtI17ic81iaz13ujYsbKZhhMA/132",
          "gender": 1,
          "userProfile": "一个211金融本科，us top50 研究生，在使用python工作中，发现对前端异常感兴趣，目前自学了了三剑客、vue2、vue3、sass、webpack，鱼皮大哥提到的几乎都学了，但是都不扎实，缺乏实战经验，努力转码中。。。",
          "userRole": "vip",
          "interests": [],
          "place": "成都",
          "birthday": null,
          "school": null,
          "major": "金融",
          "education": "海外硕",
          "graduationYear": 16,
          "jobStatus": "已工作",
          "company": null,
          "job": "数据分析",
          "workYear": 1,
          "direction": "前端",
          "goal": null,
          "github": "https://github.com/RichardChenW",
          "blog": null,
          "score": 10,
          "coin": 100,
          "followeeNum": 0,
          "followNum": 1,
          "followStatus": null,
          "vipExpireTime": "2024-05-23T14:48:43.000+00:00",
          "lastLoginTime": null,
          "createTime": "2023-05-24T14:37:04.000+00:00",
          "updateTime": "2023-05-29T02:11:22.000+00:00"
        },
        "tags": [
          "文章",
          "自我介绍",
          "随笔",
          "Python",
          "前端"
        ],
        "fileList": null,
        "videoList": [],
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      },
      {
        "id": "1660251061543251970",
        "title": "阶段总结",
        "description": "9个月的学习小结",
        "content": "加入星球`9个月`啦, 总结一下!!!\n\n时间 : 从2022年7月到2023年5月 \n\n目前现状 : 大一\n1. 按照鱼皮的路线学到了 `pring5`框架\n2. 算法还没开始刷 LeetCode刷题目为 0\n3. 计算机的一些理论不清楚(专科学校不讲)\n4. 英语水平比较烂, 正在背单词中\n\n### 关键的时间节点\n\n1. `Java基础`的学习, 花费大概5个月. 时间花费的不少, 但是我感觉还挺值得的, 毕竟基础很重要. 【更多的原因是前期找资源, 摸索学习模式花了不少时间】. 看过 韩顺平的Java基础 和 尚硅谷的Java基础\n\n![Snipaste_2023-05-21_16-17-09.png](https://pic.code-nav.cn/post_picture/1608460212774109186/DVTaH6Z4-Snipaste_2023-05-21_16-17-09.png)\n\n2. `JavaWeb`学习 大概花费大概5个月. 正常的学习,记录笔记【感觉自己的笔记有点水没发出来】. 对于我来说JavaWeb真的上升了一个难度等级, 有一些bug和Java基础的bug简直不是一个难度的. 就像韩顺平说的:\"Java基础是全部的都是自己写的, 但是到了JavaWeb自己写的东西占比就减少了, 像浏览器和Tomcat都不是自己写的, 学习难度变大\". 但是只要自己认真学习一定可以掌握的. 正如毛主席说:\"战略上藐视敌人，战术上重视敌人\".\n\n> 多写才能有所提高, 自己在写韩顺平基础的QQ项目时就写了3遍, 自己独立写完感觉自己对Java的理解提高了一个级别. 韩顺平的JavaWeb家居购物项目我自己也是独立写了一遍, 加深了对JavaWeb的理解. \n \n![photo_2023-05-20_11-07-05.jpg](https://pic.code-nav.cn/post_picture/1608460212774109186/GwpzNWHg-photo_2023-05-20_11-07-05.jpg)\n\n3. `前端框架` 像是Ajax, ES6新特性, vue脚手架. 用来大概2个星期吧. 我主要学习的数据交互方面的知识, 和一些vue基础语法.\n\n\n![photo_2023-05-20_11-22-14.jpg](https://pic.code-nav.cn/post_picture/1608460212774109186/TxpK6ipi-photo_2023-05-20_11-22-14.jpg)\n\n4. 最近一段时间, 在学习`Spring框架`  , 正常记笔记. 到明天应该就可以学习`注解配置`bean了. 一天20多p的进度\n\n### 怎么坚持下来的?\n\n我自己其实是一个很容易放弃的人吧, 之前学习英语很容易就放弃了. 但是我自己对自己非常的狠心. 比如我自己之前很喜欢玩原神, 尤其是高三玩的最严重, 但是我现在碰都不碰了(ps 我不是没有娱乐方式, 我自己是重度二次元看我头像也能猜出来了\uD83E\uDD23). 这样我才有很多时间学习`Java`\n\n#### 游戏方面\n\n1. 首先我为什么放弃玩原神(没有说不好玩, 相反就是太好玩了才卸载的)\n+ 非常浪费时间, 升级全靠**概率**.  更重要的是我自己自制力不强, 对于这种诱惑无法克制自己, 经常一玩就是**2,3**个小时, 简直克制不住自己\n2. 戒断的方式\n+ 把原神的手机号换绑到我妈的手机号上面. \n+ 把原神卸载, 这种大型游戏有一个唯一的好处就是卸载之后在下载回来时间成本非常大, 我就懒得下载了.\n\n最近我也把我经常玩的游戏 `荒野乱斗` 注销账号了. 这个是一个小型游戏我自己`经常`下回来玩而且一玩就是`2,3个小时`, 狠狠心我自己卸载了。 自己的娱乐方式就是看看番剧 + 油管视频\n\n#### 短视频方面\n\n短视频我一直都没怎么敢下载, 原因很简单: **太容易获得多巴胺了**, 导致一旦坐下做点复杂的事情就做不了. 所以我不会应该一段时间内不会下载短视频相关的APP. \n\n下面让chatGPT评价一下: 作为一种新兴的媒体形式，短视频具有其独特的优点和魅力。它可以快速地传递信息和内容，让观众在短时间内获得更多的信息和乐趣，同时也为广告主提供了一种全新的宣传方式。\n\n然而，短视频也存在一些问题。由于时长短，往往难以深入探讨某个话题或者表达完整的情感和思想。此外，短视频也容易陷入低俗、娱乐化的泥沼，对社会价值观产生不良影响。\n\n总之，短视频是一种非常流行的媒体形式，但我们需要在充分利用其优点的同时，也认识到其缺点和局限性，并努力提高其质量和价值.\n\n---\n\n自己控制力太差, 直接就卸载了. 而且看视频一般在电脑上看, 这样还可以提醒自己是一个码农\n\n\n#### 学习动力和目标\n\n但是光有时间还不够要有目标和动力, 如果自己没有明确的目标那么可以看看鱼皮的大佬的 https://bcdh.yuque.com/staff-wpxfif/resource/gxn716 帖子. 我现在的短期目标是学完Spring5课程, 长期目标是学完 Java框架, 长期目标是一份工作经济独立. 自己每天也使用微软的 `To Do` 记录自己每一天的目标, 完成打钩√ 成就感爆棚.\n\n如果没有动力的话就去刷刷星球, 看看卷王们的成果, 以此来督促自己的学习, 星球的大佬也是非常多资源也是超级多, 如果不学的话简直亏了(bushi), 资源很多\n\n---\n\n也可以试试`番茄钟` + `番茄todo` , 更加科学的方式效率更高!!! \nhttps://wx.zsxq.com/dweb2/index/topic_detail/181412248518152\n星球官方也有番茄todo的小组 https://wx.zsxq.com/dweb2/index/topic_detail/585521544152854\n\n#### 打卡\n\n每天打卡也是很好的习惯, 每天强迫自己写一点东西(尽管写的很简单\uD83E\uDD23), 让自己感觉这一天和昨天有点区别. 如果发现哪里不是很好可以及时更正! 也可以加入一些反思的元素, 反思很重要就比如我今天学习到了Spring的使用 FactoryBean 接口配置Spring中的bean, 然后想着不使用setter方法利用xml的方式找到获取到bean, 结果花了2多小时, 才通过board解决的, 太难了. 下次解决bug没什么思路就先放一放 \n\n### 总结\n\n总之就是前路漫漫还需更加努力!! 希望和球友们一起努力提高自己\n\n",
        "category": "文章",
        "cover": null,
        "language": null,
        "viewNum": 40,
        "thumbNum": 2,
        "favourNum": 1,
        "commentNum": 1,
        "priority": 0,
        "userId": "1608460212774109186",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2023-05-21T11:47:53.000+00:00",
        "updateTime": "2023-06-07T06:40:29.000+00:00",
        "user": {
          "id": "1608460212774109186",
          "planetCode": "12400",
          "userName": "leikooo",
          "userAvatar": "https://pic.code-nav.cn/user_avatar/1608460212774109186/4LsPUAdz-photo_2023-04-09_16-26-40.jpg",
          "gender": 1,
          "userProfile": "一个自学Java的小白",
          "userRole": "vip",
          "interests": [
            "Java",
            "GitHub",
            "资源",
            "教程",
            "项目"
          ],
          "place": "黑龙江",
          "birthday": "2003-03-23",
          "school": null,
          "major": "软件技术",
          "education": "专科",
          "graduationYear": 0,
          "jobStatus": "在校",
          "company": null,
          "job": "后端",
          "workYear": 0,
          "direction": "后端",
          "goal": "留学",
          "github": "https://github.com/lieeew",
          "blog": null,
          "score": 10,
          "coin": 100,
          "followeeNum": 1,
          "followNum": 3,
          "followStatus": null,
          "vipExpireTime": "2024-08-20T05:43:52.000+00:00",
          "lastLoginTime": null,
          "createTime": "2022-12-29T13:49:33.000+00:00",
          "updateTime": "2023-05-26T05:11:54.000+00:00"
        },
        "tags": [
          "文章"
        ],
        "fileList": null,
        "videoList": null,
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      },
      {
        "id": "1659493815800623105",
        "title": "面了个 Java 实习生，小伙很优秀！",
        "description": "聊聊我面试 Java 实习生的心路历程",
        "content": "大家好，我是鱼皮，前几天给自己的公司面试了一位 Java 暑期实习生，候选人目前是大三。\n\n整个过程我都录屏了，并且在征得候选人的同意后，把面试过程分享出来。一方面是希望对其他在学编程找工作的小伙伴有一些启发和参考，另一方面也是希望大家给屑老板一些建议，让我也能成为一个更好的面试官。\n\n![](https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/1/image-20230518161120025.png)\n\n以下是面试过程视频，整个面试时长大概 40 分钟，我精简了一些内容，但依然有点儿长，大家可以先收藏起来慢慢看~\n\n视频：https://www.bilibili.com/video/BV1Ps4y1M7cY\n\n虽然很多朋友参与过面试，但是应该很少有作为面试官去面试别人的经验，下面我就给大家简单分享下我作为面试官的心路历程。\n\n首先，由于我也是第一次这么正经地作为面试官，所以其实也是有点儿小紧张的。\n\n> 希望大家面试也不要紧张，可能面试官比你还紧张哈哈，就当和面试官交流技术了~\n\n大家信任我，来投递我这么一家小公司，又满怀期待地参与面试，我必须得积极回应下对吧！所以我的想法是：通过这场面试，哪怕最终这位候选人的表现没有符合我们的要求，也要让他能学到一些东西，对他之后的学习有一些正向的影响。\n\n因此，和我自己经历过的大多数面试不同，除了按照候选人的简历从上到下依次提问外，我基本上每问一个问题，都会解释一下我为什么要问这个问题，让候选人 get 到面试官的思路。此外，如果候选人不能很好地回答问题，我会给他一些小的引导（比如举个例子之类的），并且在他回答完后分享一下我想听到的答案。\n\n结果，这位小伙子整个面试的表现都非常不错，最终被我们录取了~\n\n让我印象比较深刻的加分项有几点：\n\n1. 听完问题后再作答，而不是着急抢答，每个问题的回答时长也恰到好处\n2. 语言表达自然，虽然还是有点儿紧张（正常），但回答问题时的思路还是很清晰的\n3. 项目实践能力非常丰富，完全符合我们的工作需要\n\n目前这位小伙也已经在我司工作一周了，不仅工作态度认真、上手工作快、文档写得好，甚至还能够超出预期完成任务，针对一个问题提出多种不同的解决方案等。等他放假来线下了，必须加餐！\n\n以下是这位小伙伴入职后在编程导航星球发的一个面经，得到了候选人的肯定，屑老板还是挺开心的哈哈（我可没绑架他）！\n\n![](https://yupi-picture-1256524210.cos.ap-shanghai.myqcloud.com/1/image-20230518160427926.png)\n\n> 星球原帖：https://t.zsxq.com/0e1PImfyg\n\n还有很多小伙伴问我还招不招人？\n\n至少我目前没有招新人的打算。因为招人本身不是一件随意的事，用工成本、管理成本、信任成本都要考虑。而且说实话，大家对我的期待有点太高了，我也是第一次开公司，而且也是个创业小公司，我每走一步都需要很谨慎。\n\n所以大家如果对我、对我们公司有什么好的建议呀，都欢迎评论区指正。如果屑老板真的做大做强了，肯定还会招人滴！感谢阅读。\n\n\n\n---\n\n\n欢迎学编程的朋友们加入鱼皮的编程学习圈子(https://yupi.icu) ，和上万名学编程的同学共享知识、交流进步，学习原创项目并享有答疑指导服务。",
        "category": "文章",
        "cover": null,
        "language": null,
        "viewNum": 142,
        "thumbNum": 4,
        "favourNum": 0,
        "commentNum": 2,
        "priority": 0,
        "userId": "1601072287388278786",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2023-05-19T09:38:52.000+00:00",
        "updateTime": "2023-06-07T09:17:59.000+00:00",
        "user": {
          "id": "1601072287388278786",
          "planetCode": "1",
          "userName": "程序员鱼皮",
          "userAvatar": "https://pic.code-nav.cn/user_avatar/1601072287388278786/9vqTr3HM-WechatIMG1287.jpeg",
          "gender": 1,
          "userProfile": "这个网站的老大",
          "userRole": "admin",
          "interests": [
            "C++",
            "Java",
            "Python",
            "算法"
          ],
          "place": "上海",
          "birthday": "1998-11-03",
          "school": "东华大学",
          "major": "网络工程",
          "education": null,
          "graduationYear": 2020,
          "jobStatus": null,
          "company": null,
          "job": null,
          "workYear": 2,
          "direction": "后端",
          "goal": null,
          "github": "https://github.com/liyupi",
          "blog": "https://yupi.icu",
          "score": 1600,
          "coin": 170,
          "followeeNum": 762,
          "followNum": 6,
          "followStatus": null,
          "vipExpireTime": "2024-05-24T03:35:38.000+00:00",
          "lastLoginTime": null,
          "createTime": "2022-12-09T04:32:33.000+00:00",
          "updateTime": "2023-06-08T02:53:25.000+00:00"
        },
        "tags": [
          "文章",
          "面试",
          "求职"
        ],
        "fileList": null,
        "videoList": [],
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      },
      {
        "id": "1658862059548372994",
        "title": "最后一次系统的学习 React 状态管理库 Dva，",
        "description": "react 状态管理库 Dva 使用",
        "content": "##  React 状态管理 之 Dva\n\n​\t最近在做需求的时候，需要使用到一个状态管理库来对多个组件共同状态进行统一管理，React 的状态管理库其实是有很多的，例如：最简单的 React Context ，到经典的 Redux，Mobx，再到 Hooks 时代的新起之秀：Recoil（我写的简介：https://www.code-nav.cn/post/1648709562175377409）还有很多优秀的库，可以看这篇：https://juejin.cn/post/7195513281228898363#heading-27\n\n接下来，我会按照下面思路写这篇文章：\n\n1. 什么时候需要使用状态管理库？\n2. 为什么选择状态管理库 Dva ？\n3. 什么是 Dva ？\n4. 怎么使用 Dva ？\n5. Dva 核心思想\n\n> 本文对一些分支知识点也进行记录，大家可以自行寻找需要阅读的地方\n\n### 一 ，什么时候需要使用状态管理库\n\n![image-20230517223030456](https://blog-1304565468.cos.ap-shanghai.myqcloud.com/blog/image-20230517223030456.png)\n\n​\t因为 React 是 **单向数据流**（数据的流动方向总是从父组件向子组件），当我们想要**多个组件共享一个状态**的时候，我们就会发现我们需要一个存状态的地方，方便状态被多个组件读取，更新。这里介绍一下官方的解决方案 ，使用 **Context** 将它保存在更上层组件的组件中，使用 **Provider** 将值传递给下面的树，任何组件都可以读取它。这里它的缺点有以下几个：\n\n1. **组件的复用性降低：**如果一个组件依赖于某个 context，那么这个组件只能在这个 context 存在的地方使用。这可能会限制组件的复用性。\n2. **难以进行状态管理：**当需要管理的状态变得复杂时，只使用 Context 可能会变得困难。例如，如果需要管理一个全局状态，同时还需要进行异步操作，那么可能需要引入额外的库（如 Redux 或 MobX）。\n3. **性能问题：**当一个 Context 值改变时，所有消费这个 Context 的组件都将重新渲染，无论这个改变是否会影响到它们。如果有大量的组件订阅了同一个 Context，可能会引发性能问题。\n4. **代码结构问题：**过度使用 Context 可能会导致代码结构混乱。有时候很难确定哪个部分的代码应该放在 Context Provider 中，哪个部分的代码应该放在 Context Consumer 中。\n5. **不易于调试：**与 Redux 相比，Context API 的调试工具不够强大。如果状态传递链很长或者很复杂，问题定位和调试可能会比较困难。\n\n这些问题在面对复杂状态管理，异步状态更新的情况下，会变得极为棘手，于是社区就产生了很多优秀的状态管理库来解决问题\n\n​\t我们还会在\n\n- **复杂的用户交互**：例如多个视图之间的跳转，多个组件之间的交互等，使用状态管理库（提取 UI 交互控制状态）可以帮助你更好地管理这些交互。\n- **大型项目：**对于大型的、复杂的项目，状态管理库可以帮助你更好地组织代码，使代码更易于理解和维护\n- **异步操作：**如果你的应用需要处理很多异步操作，例如网络请求，状态管理库可以帮助你更好地处理这些操作。\n- **跨组件通信：**如果你的组件树结构复杂，父子组件或者兄弟组件之间需要频繁通信，那么使用状态管理库可以简化这种跨组件的通信。\n\n**重点**：并不是所有的 React 项目都需要使用状态管理库。对于一些小型的、简单的项目，React 自带的状态管理（useState 和 useReducer hooks）可能已经足够了。引入过度复杂的状态管理库可能会导致代码变得更复杂，更难以理解和维护。引入复杂的状态管理库是为了解决\n\n1. 更加复杂的逻辑，\n2. 简化代码，\n3. 便于代码维护\n4. 提高代码可读性\n\n而不是为了让代码变得更糟糕\n\n### 为什么选择状态管理库 Dva ？\n\n​\t我在开发的项目是基于 umi 3 搭建的，所以如果选择状态管理工具，那一定就是自带的` @umijs/plugin-dva ` 插件，如果我的项目是 next.js 搭建的，我应该会选择 Recoil ，因为它的代码更加简洁，方便阅读。\n\n​\t不过，Dva也是一个很优秀的状态管理库，尤其是在大型项目中，它强制的规范了代码的书写方式，这样代码更加方便维护，因为规范代码在多人开发的大型项目是极为重要的，因为每个程序员都有自己的偏好代码书写方式，\n\n​\t这里，还有一个问题，就是 umi 3 是有两个内置的状态管理插件的 ，分别是刚刚提到的`@umijs/plugin-dva` 和 更加轻量的`@umijs/plugin-model `。那如何选择呢？\n\n1. **@umijs/plugin-model：**这是 Umi 3 中的一个新特性，是一种基于 hooks 的轻量级全局状态管理方案。plugin-model 以文件为单位进行状态管理，对于每个 model 文件，内部会自动创建一个独立的 React context。并且在使用时，不需要 dispatch，直接使用 actions 即可。**最佳实践：**@umijs/plugin-model 更适合在项目中快速、轻量级地管理全局状态。它没有繁琐的概念，API 极简，适合小到中型项目。此外，它基于 React hooks，如果你的项目已经或者准备使用 React hooks，@umijs/plugin-model 会是一个不错的选择。\n2. **@umijs/plugin-dva：**这是将 DVA 集成到 Umi 3 中的插件，使用了 Redux、Redux-saga、React-router 等技术进行状态管理。DVA 是一种更完整的状态管理方案，包含了 action、reducer、effects 等概念。**最佳实践：**@umijs/plugin-dva 更适合在大型复杂项目中进行状态管理。它有完善的概念和方法，可以处理复杂的异步操作和副作用。如果你的项目中有复杂的状态管理需求，或者项目团队已经习惯了 Redux 的开发模式，那么 @umijs/plugin-dva 会是一个更好的选择。\n\n总的来说，`@umijs/plugin-model` 和 `@umijs/plugin-dva` 的主要区别在于其复杂度和应用场景。plugin-model 更简单、更轻量级，适合小到中型项目，它也更加自由，代码更加不可控，而 plugin-dva 更复杂、更强大，适合大型复杂项目，它的约束更多，代码更加规范。\n\n### 什么是 Dva ？\n\n​\t我认为 Dva 最好的介绍文档，就是它的官网：https://dvajs.com/ ，它是由 蚂蚁 的前端大佬 sorrycc 写的，\n\n​\tdva 首先是一个基于 [redux](https://github.com/reduxjs/redux) 和 [redux-saga](https://github.com/redux-saga/redux-saga) 的数据流方案，然后为了简化开发体验，dva 还额外内置了 [react-router](https://github.com/ReactTraining/react-router) 和 [fetch](https://github.com/github/fetch)，所以也可以理解为一个轻量级的应用框架\n\n​\t我觉得Dva 产生的原因有 3 个，\n\n1. **简化 Redux 的使用**：Redux 是一个非常强大的状态管理工具，但是它的使用相对复杂，需要写很多模板代码。例如，你需要定义 actions，reducers，然后再将它们关联起来。DVA 对 Redux 进行了封装，让开发者可以更简单地使用 Redux。\n2. **处理异步操作**：Redux 本身并不支持异步操作，通常需要使用中间件如 Redux-thunk 或 Redux-saga 来处理。DVA 内置了 Redux-saga，使得处理异步操作变得更简单\n3. **集成路由**：在传统的 React + Redux 应用中，路由和状态管理通常是分开的。DVA 将 React-router 集成进来，使得路由和状态管理可以一体化处理。\n\n当然，它还提供了 插件系统，遵循 Elm 架构，\n\n**这里讲一下 Elm 架构**\n\nElm 架构是一种用于构建前端应用的架构模式，它起源于 Elm 语言，但已被许多其他的前端框架和库所采纳，包括 Redux 和 DVA。\n\nElm 架构主要包含以下几个部分：\n\n1. **Model**：模型代表了应用的状态。在一个计数器应用中，模型可能就是一个数字；在一个待办事项列表应用中，模型可能是一个代表待办事项的数组。\n2. **Update**：更新函数定义了如何根据接收到的 action 更新模型。它接收当前的模型和一个 action，然后返回一个新的模型。这个过程是纯函数，即同样的输入总会得到同样的输出，没有副作用。\n3. **View**：视图函数负责根据模型生成 UI。它接收模型作为参数，然后返回一些描述 UI 的代码（在 Web 开发中，通常是 HTML 或 JSX）。\n4. **Actions**：动作描述了用户或系统可能对应用做的操作。例如，在一个计数器应用中，可能有 \"增加\" 和 \"减少\" 两种操作。\n\n​    在 Elm 架构中，数据流是单向的：用户或系统通过触发动作来修改模型，然后更新函数根据动作和当前模型计算出新的模型，最后视图函数使用新的模型生成新的 UI。\n\n​\t这种单向数据流使得应用的状态变化变得可预测和易于理解，也更便于调试和测试。因此，Elm 架构已经被广泛应用于前端开发中。\n\n### 怎么使用 Dva ？\n\n> 参考链接：https://dvajs.com/guide/getting-started.html\n\n​\t我觉得最好学习 Dva 的方式就是自己写一个小 demo，例如：写一个需要状态共享，代码逻辑可以提取的小系统，先不使用任何状态管理库去实现，然后再用 Dva 实现，你会深刻体会到它的作用，它解决了什么问题。最好通过这个demo体验它的所有功能，然后再去看 Dva的概念，加深对状态管理库 Dva 思想的理解\n\n\n\n### Dva 核心思想\n\n>  参考链接：https://dvajs.com/guide/concepts.html\n\n![img](https://blog-1304565468.cos.ap-shanghai.myqcloud.com/blog/PPrerEAKbIoDZYr.png)\n\n​\t在 DVA 中，所有的数据流都遵循同样的模式：首先，用户交互或者其他事件触发 action；然后，saga 中间件捕获这个 action，并可能触发异步操作，如数据请求；最后，根据 action 的类型，对应的 reducer 将会更新状态。\n\n​\tDVA 还引入了 Model 的概念，将 Redux 中的 reducers、effects 和 subscriptions 集合在一起，使得相关的代码更加集中和模块化。通过这种方式，DVA 使得状态管理的逻辑更加清晰，更易于理解和维护。\n\n​\t此外，DVA 还内置了路由管理功能，提供了基于路由的动态加载机制，使得大型应用的状态管理和路由管理可以统一处理。\n\n### 注意事项 & 经验\n\n1. **合理设计 Model**：在 DVA 中，Model 是核心的部分，对应的就是你的数据模型。一个好的 Model 设计应该是简单并且易于理解的，避免过度复杂的状态设计。\n2. **保持 Reducer 的纯净**：Reducer 是一个纯函数，它不应该产生任何副作用。在 Reducer 中，你不能直接修改传入的 state，而是应该返回一个新的 state，这样也符合React 的不变性，但是如果你觉得麻烦，可以通过\n3. **尽量减少 state 的复杂性**：尽量保持 state 的扁平化，避免过度的嵌套结构。这样可以使 state 更容易理解和操作。\n4. **善用 Effects**：Effects 是 DVA 中处理异步操作的地方。你可以在这里进行各种异步操作，如获取数据、延时操作等。\n5. **合理使用 Subscription**：Subscription 可以用来监听数据源并根据需要 dispatch action，但并不是所有的 action 都需要通过 Subscription 来触发。在某些情况下，直接在组件中 dispatch action 会更加方便和直观。\n6. **注意性能优化**：在编写代码时，你应该注意避免不必要的渲染和状态更新，以提高应用的性能。\n7. **遵循单一职责原则**：每个 Model 应该只负责管理一部分状态，每个 Component 应该只负责渲染一部分 UI。这样可以使你的代码更加模块化，更易于维护。\n8. **编写可测试的代码**：尽量让你的代码更容易进行单元测试。例如，你可以将业务逻辑尽可能抽取出来，使其不依赖于特定的组件或者环境。\n9. 直接在 model 中监听 state 的变化可能会导致逻辑混乱，不易于维护，因此并不推荐这样做。\n10. 在大多数情况下，你应该尽量在组件中监听 state 的变化，然后 dispatch action 来更新 state。\n11. 我们应该把 更新状态 state 和 同步操作 都在 Reducer 中实现，把异步事件，接口请求都在 Effect 中实现，\n12. 我们可以在 Subscription 中进行订阅数据源，数据源可以是\n\n- 当前的时间\n- 服务器的 websocket 连接\n- keyboard 输入\n- geolocation （用户的地理位置信息的变化）变化\n- history 路由变化等等。\n\n当数据源发生变化时，可以通过 dispatch 触发相应的 action，进而改变应用状态。\n\n",
        "category": "文章",
        "cover": "https://pic.code-nav.cn/post_cover/1619930914211520514/LZm85ldj-psagSCVHOKQVqqNjjMdf.jpg",
        "language": null,
        "viewNum": 42,
        "thumbNum": 5,
        "favourNum": 0,
        "commentNum": 0,
        "priority": 0,
        "userId": "1619930914211520514",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2023-05-17T15:48:29.000+00:00",
        "updateTime": "2023-06-05T04:45:01.000+00:00",
        "user": {
          "id": "1619930914211520514",
          "planetCode": "1012",
          "userName": "SnailRun",
          "userAvatar": "https://thirdwx.qlogo.cn/mmopen/vi_32/aRneVaen8XSWOILibfkW5SHicYZia2oDxA8zKUtnzLRVFbwiclEK8f80QMRk3kviawzL8gTWk4MgA0P0VeF1r0O0upg/132",
          "gender": null,
          "userProfile": null,
          "userRole": "vip",
          "interests": [],
          "place": null,
          "birthday": null,
          "school": null,
          "major": null,
          "education": null,
          "graduationYear": null,
          "jobStatus": null,
          "company": null,
          "job": null,
          "workYear": null,
          "direction": null,
          "goal": null,
          "github": "https://github.com/chaseFunny",
          "blog": "https://chasefunny.github.io/",
          "score": 0,
          "coin": 0,
          "followeeNum": 9,
          "followNum": 3,
          "followStatus": null,
          "vipExpireTime": "2024-02-13T14:37:59.000+00:00",
          "lastLoginTime": null,
          "createTime": "2023-01-30T05:30:01.000+00:00",
          "updateTime": "2023-05-30T08:56:16.000+00:00"
        },
        "tags": [
          "文章",
          "React",
          "教程",
          "类库",
          "设计模式"
        ],
        "fileList": null,
        "videoList": null,
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      }
    ],
    "total": "112",
    "size": "10",
    "current": "1",
    "orders": [],
    "optimizeCountSql": true,
    "searchCount": true,
    "countId": null,
    "maxLimit": null,
    "pages": "12"
  },
  "message": "ok"
}